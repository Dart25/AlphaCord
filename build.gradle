apply plugin: "java"
apply plugin: "idea"

version '1.0'

sourceCompatibility = JavaVersion.VERSION_16

sourceSets.main.java.srcDirs = ["src"]

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

//fix no docs for mindustry classes/methods on
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories{
    mavenCentral()
    maven{ url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven{ url 'https://www.jitpack.io' }
}

ext{
    //the build number that this plugin is made for
    mindustryVersion = 'v145'
    jabelVersion = "93fde537c7"
}

//java 8 backwards compatibility flag
allprojects{
    tasks.withType(JavaCompile){
        options.compilerArgs.addAll(['--release', '8'])
    }
}

dependencies{
    //discord deps
    def jdaVersion = '5.0.0-beta.10'
    def webhooksVersion = '0.8.2'

    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindustryVersion"
    annotationProcessor "com.github.Anuken:jabel:$jabelVersion"
    //change 'implementation' to 'compile' in old Gradle versions
    implementation("net.dv8tion:JDA:$jdaVersion") {
        exclude module: 'opus-java'
    }
    implementation "club.minnced:discord-webhooks:$webhooksVersion"
}

jar{
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE) //fix weird error about META-INF/LICENSE being a duplicate
    archiveFileName = "${project.archivesBaseName}.jar"
    from{
        configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }

    from(rootDir){
        include "plugin.json"
    }
}
